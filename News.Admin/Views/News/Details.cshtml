@using News.Admin.DTO.NewsDto
@model NewsItemDto

@{
    ViewData["Title"] = "News Details";
}

<h1 class="text-center mb-4">📰 News Details</h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-4">
                    <h4 class="card-title text-center mb-3 text-primary">News Information</h4>
                    <hr />

                    <dl class="row">
                        <dt class="col-sm-4 text-end">ID:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Id)</dd>

                        <dt class="col-sm-4 text-end">Title:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Title)</dd>

                        <dt class="col-sm-4 text-end">Description:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Description)</dd>

                        <dt class="col-sm-4 text-end">Media:</dt>
                        <dd class="col-sm-8">
                            @{
                                var ext = System.IO.Path.GetExtension(Model.MediaUrl)?.ToLower();
                            }
                            @if (ext == ".jpg" || ext == ".jpeg" || ext == ".png" || ext == ".gif")
                            {
                                <img src="@Model.MediaUrl"
                                     class="img-fluid rounded shadow-sm"
                                     style="max-height: 200px; cursor: pointer; object-fit: cover;"
                                     data-bs-toggle="modal"
                                     data-bs-target="#modal-@Model.Id" />

                                <!-- Modal for Image -->
                                <div class="modal fade" id="modal-@Model.Id" tabindex="-1" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-body p-0">
                                                <img src="@Model.MediaUrl"
                                                     class="img-fluid w-100 rounded"
                                                     style="object-fit: contain;" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else if (ext == ".mp4")
                            {
                                <video class="img-fluid rounded shadow-sm" style="max-height: 200px;" controls>
                                    <source src="@Model.MediaUrl" type="video/mp4" />
                                    Your browser does not support the video tag.
                                </video>
                            }
                            else
                            {
                                <span class="text-muted">Unknown media format</span>
                            }
                        </dd>

                        <dt class="col-sm-4 text-end">Created At:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.CreatedAt)</dd>

                        <dt class="col-sm-4 text-end">Updated At:</dt>
                        <dd class="col-sm-8">
                            @if (Model.UpdatedAt == null)
                            {
                                <span class="text-muted">Not updated yet</span>
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.UpdatedAt)
                            }
                        </dd>
                    </dl>

                    <div class="d-flex justify-content-between mt-4">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning shadow">✏️ Edit</a>
                        <a asp-action="Index" class="btn btn-outline-secondary shadow">← Back to List</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
